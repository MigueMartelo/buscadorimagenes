{"version":3,"sources":["components/Buscador.js","components/Imagen.js","components/Navegacion.js","components/Resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscador","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","_this","current","value","props","datosBusqueda","react_default","a","createElement","onSubmit","this","className","ref","type","placeholder","Component","Imagen","_props$imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","target","Navegacion","mostrarAnterior","pagina","onClick","paginaAnterior","mostrarSiguiente","_this$props","totalPaginas","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","Fragment","id","map","components_Imagen","key","components_Navegacion","App","state","cargando","consultarAPI","_callee","_this$state","url","regenerator_default","wrap","_context","prev","next","concat","fetch","then","res","setState","json","result","setTimeout","hits","Math","ceil","totalHits","catch","err","console","log","stop","scroll","document","querySelector","scrollIntoView","resultado","components_Resultado","components_Buscador","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29f42bfe.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Buscador extends Component {\n\n    busquedaRef = React.createRef();\n\n    obtenerDatos = (e) => {\n        e.preventDefault();\n\n        const termino = this.busquedaRef.current.value;\n        \n        this.props.datosBusqueda(termino);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.obtenerDatos}>\n                <div className=\"row\">\n                    <div className=\"form-group col-md-8\">\n                        <input ref={this.busquedaRef} type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Busca tu imágen, ejemplo: Futbol\"/>\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\" value=\"Buscar...\"/>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Buscador;","import React from 'react';\n\nconst Imagen = (props) => {\n\n    const {largeImageURL, likes, previewURL, tags, views} = props.imagen;\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n            <div className=\"card\">\n                <img src={previewURL} alt={tags} className=\"card-img-top\"/>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{likes} Me Gusta</p>\n                    <p className=\"card-text\">{views} Vistas</p>\n\n                    <a href={largeImageURL} className=\"btn btn-primary btn-block\" target=\"_blank\">Ver Imagen</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default Imagen;","import React, { Component } from 'react';\n\nclass Navegacion extends Component {\n\n    mostrarAnterior = () => {\n        const {pagina} = this.props;\n\n        if(pagina === 1 ) return null;\n\n        return (\n            <button onClick={this.props.paginaAnterior} className=\"btn btn-info mr-1\">&larr; Anterior </button>\n        )\n    }\n\n    mostrarSiguiente = () => {\n        const {pagina, totalPaginas} = this.props;\n\n        if(pagina === totalPaginas ) return null;\n\n        return (\n            <button onClick={this.props.paginaSiguiente} className=\"btn btn-info \">Siguiente &rarr;</button>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"py-5\">\n                { this.mostrarAnterior() }\n                { this.mostrarSiguiente() }\n            </div>\n        );\n    }\n}\n\nexport default Navegacion;","import React, { Component } from 'react';\nimport Imagen from './Imagen';\nimport Navegacion from './Navegacion';\n\nclass Resultado extends Component {\n\n    mostrarImagenes = () => {\n        const {imagenes} = this.props;\n\n        if(imagenes.length === 0) return null;\n\n        return (\n            <React.Fragment>\n                <div id=\"resultado\" className=\"col-12 p-5 row\">\n                    {this.props.imagenes.map( imagen => (\n                        <Imagen\n                            key={imagen.id}\n                            imagen={imagen}\n                        />\n                    ))}\n                </div>\n                <Navegacion \n                    paginaAnterior={this.props.paginaAnterior}\n                    paginaSiguiente={this.props.paginaSiguiente}\n                    pagina={this.props.pagina}\n                    totalPaginas={this.props.totalPaginas}\n                />\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                { this.mostrarImagenes() }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Resultado;","import React, { Component } from 'react';\nimport Buscador from './components/Buscador';\nimport Resultado from './components/Resultado';\n\nclass App extends Component {\n\n  state = {\n    termino: '',\n    imagenes: [],\n    pagina: '',\n    cargando: false,\n    totalPaginas: ''\n  }\n\n  consultarAPI = async () => {\n\n    const apiKey = '1729117-1b6030ad5cc42d11efde44e52',\n          {termino, pagina} = this.state,\n          url = `https://pixabay.com/api/?key=${apiKey}&q=${termino}&lang=es&per_page=50&page=${pagina}`;\n\n    await fetch(url)\n      .then( res => {\n        this.setState({\n          cargando: true\n        });\n        return res.json();\n      })\n      .then( result => {        \n        setTimeout(() => {\n          this.setState({\n            imagenes: result.hits,\n            cargando: false,\n            totalPaginas: Math.ceil(result.totalHits / 50)\n          });\n        }, 500);\n      })\n      .catch( err => console.log(err) );\n  }\n\n  datosBusqueda = (termino) => {\n    this.setState({\n      termino,\n      pagina: 1\n    }, () => {\n      this.consultarAPI();\n    });\n  }\n\n  paginaAnterior = () => {\n    // Leer state\n    let pagina = this.state.pagina;\n    // Si la página es = 1 no podemos retroceder\n    if(pagina === 1) return null;\n    // restar a la página actual 1\n    pagina -=1;\n    // actualizar el state\n    this.setState({\n      pagina\n    }, () => {\n      this.consultarAPI();\n      this.scroll();\n    });\n  }\n  paginaSiguiente = () => {    \n    // Leer state\n    let pagina = this.state.pagina;\n    // Sumar a la página actual 1\n    pagina +=1;\n    // Actualizar el state\n    this.setState({\n      pagina\n    }, () => {\n      this.consultarAPI();\n      this.scroll();\n    });\n  }\n\n  scroll = () => {\n    const elemento = document.querySelector('#resultado');\n    elemento.scrollIntoView('auto', 'start');\n  }\n\n  render() {\n\n    const cargando = this.state.cargando;\n    let resultado;\n\n    if(cargando) {\n      resultado = <div>Cargando...</div>\n    } else {\n      resultado = <Resultado\n                    imagenes={this.state.imagenes}\n                    paginaAnterior={this.paginaAnterior}\n                    paginaSiguiente={this.paginaSiguiente}\n                    pagina={this.state.pagina}\n                    totalPaginas={this.state.totalPaginas}\n                  />\n    }\n\n    return (\n      <div className=\"app container\">\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Buscador de Imágenes</p>\n          <Buscador datosBusqueda={this.datosBusqueda} />\n        </div>\n        <div className=\"row justify-content-center\">\n          {resultado}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}